{"version":3,"file":"homePage.js","mappings":"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","sources":["webpack://pennschedule/./src/events.js","webpack://pennschedule/./src/timeConverter.js","webpack://pennschedule/./src/homePage/components/homePageRender.js","webpack://pennschedule/./src/selectorDOMBuilder.js","webpack://pennschedule/./src/homePage.js","webpack://pennschedule/./src/homePage/components/forms/availabilityBlockForm.js","webpack://pennschedule/./src/homePage/components/mainModuleRenders/availabilityBlocksGrid.js","webpack://pennschedule/./src/validators/availabilityValidator.js","webpack://pennschedule/./src/homePage/models/allAvailabilityData.js","webpack://pennschedule/./src/homePage/models/availabilityData.js","webpack://pennschedule/./src/homePage/components/forms/myTeamsOrderForm.js","webpack://pennschedule/./src/homePage/components/forms/teamDataForm.js","webpack://pennschedule/./src/homePage/components/mainModuleRenders/teamsGrid.js","webpack://pennschedule/./src/validators/teamValidator.js","webpack://pennschedule/./src/homePage/models/myTeamsData.js","webpack://pennschedule/./src/homePage/models/singleTeamData.js","webpack://pennschedule/./src/databasePost.js"],"sourcesContent":["\n\nconst events = {\n    events: {},\n    \n    subscribe: function(eventName, fn){\n        this.events[eventName] = this.events[eventName] || [];\n        this.events[eventName].push(fn);\n    },\n\n    unsubscribe: function (eventName, fn){\n        if(this.events[eventName]){\n            for(let i = 0; i< this.events[eventName].length; i++){\n                if(this.events[eventName][i] === fn){\n                    this.events[eventName].splice(i, 1);\n                    break;\n                }\n            }\n        }\n    },\n\n    publish: function (eventName, data){\n        if(this.events[eventName]){\n            this.events[eventName].forEach(function(fn){\n                fn(data);\n            })\n        }\n    }\n}\n\n\n\nexport {events}","\nconst timeValueConverter = (function(){\n\n    function convertTotalMinutesToTime(totalMins){\n        let standardTime;\n        let hour = Math.floor(totalMins/60)\n        let meridian\n            if(hour > 0 && hour <12){\n                meridian = \"a\"\n            }else if(hour == 0){\n                hour += 12\n                meridian = \"a\"\n            }else if(hour == 12){\n                meridian = \"p\"\n            }else{\n                hour -=12\n                meridian = \"p\"\n            }\n            \n        let mins = totalMins%60\n            if(mins == 0){\n                mins = \"00\"\n            }\n        standardTime = `${hour}:${mins}${meridian}`\n        return standardTime\n    }\n\n    function runConvertTotalMinutesToTime(totalMins){\n        return convertTotalMinutesToTime(totalMins)\n    }\n\n    function convertTimeToTotalMinutes(time){\n        const colonIndex = time.indexOf(\":\");\n        const meridian = time[time.length-1]\n        const meridianIndex = time.indexOf(meridian);\n        \n        let hour = Number(time.slice(0, colonIndex));\n            if(meridian == \"p\" && hour != 12){\n                hour +=12;\n            }else if(meridian == \"a\" && hour == 12){\n                hour -=12;\n            }\n        const min = Number(time.slice(colonIndex + 1, meridianIndex));\n        const totalMinutes = hour*60 + min;\n\n        return totalMinutes\n    }\n\n    function runConvertTimeToTotalMinutes(time){\n        return convertTimeToTotalMinutes(time)\n    }\n\n    return {runConvertTimeToTotalMinutes, runConvertTotalMinutesToTime}\n})();\n\nexport{timeValueConverter}","import {events} from \"../../../src/events\"\n\nconst homeRender = (function(){\n\n    events.subscribe(\"userDataSet\", setHomeEventListeners);\n    events.subscribe('allTeamsVerificationSaved', setDataAllTeamsVerified)\n\n    function setHomeEventListeners(){\n        setAvailabilityEventListeners();\n        setTeamsEventListeners();\n    }\n\n    function setTeamsEventListeners(){\n        \n        const addTeamButton = document.querySelector(\"#teamGridAddTeam\");\n        const verifyAllTeamsButton = document.querySelector(\"#verifyButton\");\n        const modifyAllTeamsOrderButton = document.querySelector(\"#modifyMyTeamsOrder\")\n\n        const allTeams = Array.from(document.querySelector('#teamGrid').children);\n\n        if(allTeams[0].innerText != \"You have no teams listed!\"){\n            allTeams.forEach(function(team){\n                const _id = team.dataset.teamid;\n                const editTeamButton = team.querySelector(\".teamGridTeamEditButton\");\n                const deleteTeamButton = team.querySelector(\".teamGridTeamDeleteButton\");\n                const verifyTeamButton = team.querySelector(\".teamGridTeamVerifyButton\");\n\n                editTeamButton.addEventListener(\"click\", editTeam);\n                deleteTeamButton.addEventListener(\"click\", deleteTeam);\n                verifyTeamButton.addEventListener(\"click\", verifyTeam);\n\n                function editTeam(){\n                    events.publish('editTeamClicked', _id)\n                }\n\n                function deleteTeam(){\n                    const confirmation = confirm('Delete this team?');\n                    if(confirmation){\n                        events.publish('deleteTeamClicked', _id)\n                    }\n                }\n\n                function verifyTeam(){\n                    events.publish('verifyTeamClicked', _id)\n                }\n            })\n        }\n\n        addTeamButton.addEventListener(\"click\", addTeam);\n        verifyAllTeamsButton.addEventListener(\"click\", verifyAllTeams);\n        modifyAllTeamsOrderButton.addEventListener(\"click\", modifyAllTeamsOrder);\n\n        function addTeam(){\n            events.publish('addTeamClicked')\n        }\n        function verifyAllTeams(){\n            events.publish('verifyAllTeamsClicked')\n        }\n        function modifyAllTeamsOrder(){\n            events.publish('teamOrderChangeClicked')\n        }\n    }\n\n    function setAvailabilityEventListeners(){\n        const availabilityTimeBlockDays = Array.from(document.querySelector(\"#userPageAddAvailabilityBlockGrid\").children);\n    \n        availabilityTimeBlockDays.forEach(function(day){\n            const dayString = day.querySelector(\"h3\").innerText;\n            const addBlockButton = day.querySelector(\".userPageAddAvailabilityBlockAddButton\");\n    \n            addBlockButton.addEventListener(\"click\", addTimeBlock);\n    \n            const dayAllBlocks = Array.from(day.querySelectorAll(\".userPageAddAvailabilityAllBlocks > div\"));\n            if(dayAllBlocks.length > 0 ){\n                dayAllBlocks.forEach(function(timeBlock){\n                    const _id = timeBlock.dataset.timeblockid\n                    const editBlockButton = timeBlock.querySelector(\".userPageAddAvailabilityBlockEditButton\");\n                    const deleteBlockButton = timeBlock.querySelector(\".userPageAddAvailabilityBlockDeleteButton\")\n    \n                    if(editBlockButton != null){\n                        editBlockButton.addEventListener(\"click\", editTimeBlock);\n                        deleteBlockButton.addEventListener(\"click\", deleteTimeBlock);\n                    }\n                    \n    \n                    function editTimeBlock(){\n                        events.publish(\"editAvailabilityClicked\", {day:dayString, _id})\n                    }\n    \n                    function deleteTimeBlock(){\n                        const confirmation = confirm(\"Delete this time block?\");\n                        if(confirmation){\n                            events.publish(\"deleteAvailabilityClicked\", {day:dayString, _id})\n                        }\n                    }\n                })\n            }\n    \n            function addTimeBlock(){\n                events.publish(\"addAvailabilityTimeBlockClicked\", dayString)\n            }\n        })\n    }\n\n    function setDataAllTeamsVerified(timeData){\n        const lastVerifiedContent = document.querySelector('#verifyInfo');\n        lastVerifiedContent.innerText = `The last time you verified all teams were up-to-date was: ${timeData}`;\n    }\n\n})()\n\nexport {homeRender}\n","import {events} from \"./events\"\nimport {timeValueConverter} from \"./timeConverter\"\n\nconst selectorBuilder = (function(){ \n\n    const selectionRanges = { \n        startTime: {\n            start: null,\n            end: null,\n            increment: 15\n        },\n        endTime: {\n            start: null,\n            end: null,\n            increment: 15\n        },\n        teamSize: {\n            start: 5,\n            end: null,\n            increment: 5\n        },\n        facilityOpen:{ //4am to 8pm, default value 6am (360)\n            start: 240,\n            end: 1200,\n            increment: 15\n        },\n        facilityClose:{ //5am to 9pm, default value 8pm (1200)\n            start: 300,\n            end: 1260,\n            increment: 15\n        },\n        facilityMaxCapacity:{//range 10-150, default value 120\n            start: 10,\n            end: 150,\n            increment: 5\n        },\n        dayOfWeek: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"], \n        inWeiss: [\"yes\", \"no\"],\n    };\n    \n    events.subscribe(\"adminDataFetched\", setSelectorRanges);\n    events.subscribe('userDataFetched', setSelectorRanges)\n    events.subscribe('setNewSelectorRanges', setSelectorRanges)\n    \n    function setSelectorRanges(dBdata){\n        let facilityData\n        if(Object.prototype.hasOwnProperty.call(dBdata, 'facilityData')){\n            facilityData = dBdata.facilityData\n        }else{\n            facilityData = dBdata\n        }\n        selectionRanges.startTime.start = facilityData.facilityOpen;\n        selectionRanges.endTime.start = facilityData.facilityOpen + 30;\n        selectionRanges.startTime.end = facilityData.facilityClose - 30;\n        selectionRanges.endTime.end = facilityData.facilityClose;\n        selectionRanges.teamSize.end = facilityData.facilityMaxCapacity;\n    }\n\n    function runBuildSelector(primaryClass){\n        return buildSelector(primaryClass)\n    }\n\n    function buildSelector(primaryClass){\n        const selection = document.createElement(\"select\");\n        selection.classList.add(primaryClass);\n        selection.classList.add(\"selector\");\n            const defaultOption = document.createElement(\"option\");\n            defaultOption.value = \"default\";\n            defaultOption.innerText = \"--\";\n        selection.appendChild(defaultOption);\n\n        switch(primaryClass){\n            case \"dayOfWeek\":\n            case \"inWeiss\": \n                buildArraySelectorOptions(primaryClass, selection);\n                break;\n            \n            case \"teamSize\":\n                buildRangeSelectorOptions(primaryClass, selection);\n                break;   \n            case \"endTime\":\n            case \"facilityClose\":\n            case \"facilityMaxCapacity\":\n                buildRangeSelectorOptions(primaryClass, selection);\n                break;\n            \n            case \"startTime\":\n            case \"facilityOpen\":\n                buildRangeSelectorOptions(primaryClass, selection);\n                selection.addEventListener(\"change\", modifyEndTimeDefaultValue);\n                break;\n        }\n\n        selection.addEventListener(\"change\", disableDefaultOption)\n\n        return selection\n    }\n\n    function buildArraySelectorOptions(primaryClass, selector){\n        const optionValues = selectionRanges[primaryClass];\n        optionValues.forEach(function(optionValue){\n            const option = document.createElement(\"option\");\n            option.value = optionValue;\n            option.innerText = optionValue;\n            selector.appendChild(option); \n        })\n    }\n\n    function buildRangeSelectorOptions(primaryClass, selector){\n        const optionValues = selectionRanges[primaryClass];\n        for(let i = optionValues.start; i<=optionValues.end; i += optionValues.increment){\n            const option = document.createElement(\"option\");\n            option.value = i;\n            if(primaryClass == \"teamSize\" || primaryClass == \"facilityMaxCapacity\"){\n                option.innerText = i;\n            }else{\n                option.innerText = timeValueConverter.runConvertTotalMinutesToTime(i);\n            }selector.appendChild(option);\n        }\n    }\n\n    function modifyEndTimeDefaultValue(){\n        const startTimeSelectedValue = Number(this.value);\n        const endTimeValuesArray = Array.from(this.parentElement.nextElementSibling.lastElementChild.children);\n        endTimeValuesArray.forEach(function(time){\n            const endTimeValue = Number(time.value);\n            if(endTimeValue < startTimeSelectedValue + 30 || endTimeValue == \"default\"){\n                time.disabled = true;\n            }else{\n                time.disabled = false;\n            }\n        })\n    }\n\n    function disableDefaultOption(){\n        const values = Array.from(this.children);\n        values[0].disabled = true;\n    }\n\n    return {runBuildSelector}\n\n})();\n\nexport{selectorBuilder}\n","import {events} from \"../src/events\"\nimport {homeRender} from \"../src/homePage/components/homePageRender\"\n\nimport {availabilityTimeBlockDataFormComponent} from \"../src/homePage/components/forms/availabilityBlockForm\"\nimport {availabilityTimeBlockDataGridComponent} from \"../src/homePage/components/mainModuleRenders/availabilityBlocksGrid\"\nimport {availabilityValidator} from \"../src/validators/availabilityValidator\"\nimport {allAvailabilityDataModel} from \"../src/homePage/models/allAvailabilityData\"\nimport {availabilityData} from \"../src/homePage/models/availabilityData\"\n\nimport { myTeamsOrderFormComponent } from \"../src/homePage/components/forms/myTeamsOrderForm\"\nimport { teamDataFormComponent } from \"../src/homePage/components/forms/teamDataForm\"\nimport { myTeamsDataGridComponent} from \"../src/homePage/components/mainModuleRenders/teamsGrid\"\nimport { teamValidator} from \"../src/validators/teamValidator\"\nimport { myTeamsData} from \"../src/homePage/models/myTeamsData\"\nimport { singleTeamData } from \"../src/homePage/models/singleTeamData\"\n\n\nimport {databasePost} from \"../src/databasePost\"\n\nwindow.onload = setScriptData;\n\nasync function setScriptData(){\n    try{\n        const mediaQuery = window.matchMedia('(max-width: 485px)');\n        checkWidth(mediaQuery);\n        mediaQuery.addEventListener('change', checkWidth)\n        const userPageJSON = await fetch('home/userData');\n        const userPageData = await userPageJSON.json();\n        events.publish(\"userDataFetched\", userPageData);\n        events.publish(\"userDataSet\");\n        \n    }catch(err){\n        console.log(err)\n    }\n}\n\nfunction checkWidth(e){//mobile devices don't always have xlsx reader, so attempting to restrict viewport, but not having success\n    if(e.matches){\n        const body = document.querySelector('body');\n        const newText = document.createElement('p');\n        newText.innerText = 'This program is designed for PCs, laptops and tablets, due to general support for XLSX documents on those platforms. Please use one of the recommended devices for best experience.'\n        const children = Array.from(document.querySelectorAll('body *'));\n        if(children.length >0){\n            children.forEach(function(child){\n                child.remove();\n            })\n        }\n\n        body.appendChild(newText)\n        throw('Window size not appropriate')\n    }\n}\n","import { events } from \"../../../../src/events\";\nimport { selectorBuilder } from \"../../../../src/selectorDOMBuilder\"\nimport { timeValueConverter } from \"../../../../src/timeConverter\";\n\n\nconst availabilityTimeBlockDataFormComponent = (function(){\n\n    events.subscribe('availabilityBlockAddRequested', renderTimeBlockDataForm);\n    events.subscribe('availabilityBlockDataLoaded', renderTimeBlockDataForm);\n    events.subscribe('availabilityDataChangesCancelled', unrenderTimeBlockDataForm);\n    events.subscribe(\"renderAvailabilityBlockValidationErrors\", renderAvailabilityBlockDataValidationErrors)\n    events.subscribe(\"editAvailabilityBlockDataSaved\", unrenderTimeBlockDataForm);\n    events.subscribe('newAvailabilityBlockDataSaved', unrenderTimeBlockDataForm)\n\n    const body = document.querySelector('body')\n    const mainPage = document.querySelector('#mainPage')\n    const formDivWrapper = document.querySelector(\"#entryFormDiv\")\n    const formDiv = document.querySelector(\"#entryForm\");\n    const overlayDiv = document.createElement('div');\n    overlayDiv.id = 'overlayDiv'\n    \n    function renderTimeBlockDataForm(timeBlockDayData){ \n    \n        const elements = setElements();\n        populateContent(elements, timeBlockDayData);\n        setEventListeners(elements, timeBlockDayData);\n    \n        formDiv.appendChild(elements.content);\n\n        const selectors = formDiv.querySelectorAll('.selector');\n        const saveButton = formDiv.querySelector('#availabilityDayTimeBlockFormSaveButton')\n        if(Array.from(selectors).filter(function(selector){\n            return selector[selector.selectedIndex].value == \"default\"\n        }).length > 0){\n            saveButton.disabled = true;\n        }\n\n       \n        mainPage.appendChild(overlayDiv)\n        overlayDiv.appendChild(formDivWrapper)\n\n        formDivWrapper.classList.toggle(\"formHidden\");\n        body.style.overflowY = 'hidden'\n    } \n\n    function unrenderTimeBlockDataForm(){\n        if(formDiv.firstChild){\n            while(formDiv.firstChild){\n                formDiv.removeChild(formDiv.firstChild)\n            }\n        }\n\n        overlayDiv.replaceWith(...overlayDiv.childNodes)\n        formDivWrapper.classList.add(\"formHidden\");\n        body.style.overflowY = 'scroll'\n    }\n    \n    \n    function setElements(){\n        const template = document.querySelector(\"#availabilityDayTimeBlockFormTemplate\");\n        const content = document.importNode(template.content, true);\n    \n        const dayLabel = content.querySelector('h3');\n        const timeBlockSelectors = content.querySelectorAll(\".selector\");  \n        const startDiv = content.querySelector(\"#availabilityDayTimeBlockSelectorsStart\")\n        const endDiv =   content.querySelector(\"#availabilityDayTimeBlockSelectorsEnd\")              \n        const saveButton = content.querySelector(\"#availabilityDayTimeBlockFormSaveButton\");\n        const cancelButton = content.querySelector(\"#availabilityDayTimeBlockFormCancelButton\");\n    \n        return {content, dayLabel, timeBlockSelectors, saveButton, cancelButton, startDiv, endDiv}\n    }\n    \n    function populateContent(selectorElements, timeBlockData){\n\n        selectorElements.dayLabel.innerText = `Day: ${timeBlockData.timeBlock.day}`;\n\n        selectorElements.timeBlockSelectors.forEach(function(selector){\n            const primaryClass = Array.from(selector.classList)[0];\n    \n            const selectorNew = selectorBuilder.runBuildSelector(primaryClass);\n            let selectedOption\n            \n            if(selectorNew.querySelector(`option[value = \"${timeBlockData.timeBlock.availability[primaryClass]}\"]`) != null){\n                selectedOption = selectorNew.querySelector(`option[value = \"${timeBlockData.timeBlock.availability[primaryClass]}\"]`)\n            }else{\n                selectedOption = selectorNew.querySelector(\"option[value = 'default']\");\n                const errorText = createErrorText(timeBlockData.timeBlock.availability, primaryClass);\n                if(primaryClass == \"startTime\"){\n                    selectorElements.startDiv.appendChild(errorText)\n                }else{\n                    selectorElements.endDiv.appendChild(errorText)\n                }\n            }\n            \n            selectedOption.selected = true;\n            if(selectedOption.value != \"default\"){\n                selectorNew.firstChild.disabled = true;\n            }\n    \n            selectorNew.addEventListener(\"change\", publishSelectionValueChange);\n            \n            function publishSelectionValueChange(){\n                const modifiedSelector = primaryClass\n                let value\n                if(primaryClass == 'startTime' || primaryClass == 'endTime'){\n                    value = Number(selectorNew.value)\n                }else{\n                    value = selectorNew.value\n                }\n                events.publish(\"modifyAvailabilitySelectorValues\", {modifiedSelector, value})\n\n                const selectors = formDiv.querySelectorAll('.selector');\n                const saveButton = formDiv.querySelector('#availabilityDayTimeBlockFormSaveButton')\n                if(Array.from(selectors).filter(function(selector){\n                    return selector[selector.selectedIndex].value == \"default\"\n                }).length == 0){\n                    saveButton.disabled = false;\n                }\n            }\n    \n            selector.replaceWith(selectorNew)\n        })\n    }\n    \n    function setEventListeners(selectorElements, timeBlockData){\n    \n        selectorElements.saveButton.addEventListener(\"click\", updateTimeBlockData);\n        selectorElements.cancelButton.addEventListener(\"click\", cancelTimeBlockChanges);\n    \n        function updateTimeBlockData(){\n            events.publish(\"updateAvailabilityClicked\", timeBlockData.origin);\n        }\n        function cancelTimeBlockChanges(){\n            events.publish(\"cancelAvailabilityBlockChangesClicked\")\n        }\n    }\n    \n    function createErrorText(data, selector){\n        const errorText = document.createElement(\"p\");\n        errorText.innerText = `Your selected value of ${timeValueConverter.runConvertTotalMinutesToTime(data[selector])} for ${selector} has been invalidated by a change to the opening/closing times for the facility. Speak with your supervisor to address this or change this value.`;\n        return errorText;\n    }\n\n    function renderAvailabilityBlockDataValidationErrors(blockData){\n        \n        unrenderTimeBlockDataForm();\n        renderTimeBlockDataForm(blockData);\n        \n        const errorList = document.querySelector(\"#availabilityDayTimeBlockGeneralErrorList\");\n\n        if(errorList.firstChild){\n            while(errorList.firstChild){\n                errorList.removeChild(errorList.firstChild)\n            }\n        }\n\n        blockData.errors.forEach(function(error){\n            const bullet = document.createElement(\"li\");\n            bullet.innerText = error;\n            errorList.appendChild(bullet);\n        })\n    }\n})()\n\nexport {availabilityTimeBlockDataFormComponent}","import { events } from \"../../../events\";\nimport {timeValueConverter} from \"../../../timeConverter\";\n\nconst availabilityTimeBlockDataGridComponent = (function(){\n\n    events.subscribe(\"renderUpdatedAvailabilityBlockData\", renderAvailabilityTimeBlockDay)\n\n    function renderAvailabilityTimeBlockDay(availabilityTimeBlockDayData){\n        const {day, blocks} = availabilityTimeBlockDayData\n    \n        const availabilityBlocksDiv = document.querySelector(\"#userPageAddAvailabilityBlockGrid\");\n        const dayDiv = Array.from(availabilityBlocksDiv.querySelectorAll(\"div\")).find(function(div){\n            return div.firstElementChild.innerText == day;\n        });\n        const dayAllBlocksDiv = dayDiv.querySelector(\".userPageAddAvailabilityAllBlocks\");\n        const dayAllBlocksDivNew = document.createElement(\"div\");\n        dayAllBlocksDivNew.classList.add(\"userPageAddAvailabilityAllBlocks\")\n    \n        if(blocks.length > 0){\n            blocks.forEach(function(timeBlockData){\n                const row = buildBlockRow(day, timeBlockData);\n                dayAllBlocksDivNew.appendChild(row)\n            })\n        }else{\n            const defaultText = document.createElement('p');\n            defaultText.innerText = \"No timeblocks\";\n            dayAllBlocksDivNew.appendChild(defaultText);\n        }\n        \n    \n        dayAllBlocksDiv.replaceWith(dayAllBlocksDivNew);\n    }\n     \n    function buildBlockRow(day, blockData){ \n        const {_id} = blockData\n        const elements = setTemplateElements()\n        setElementsContent(elements, blockData);\n        setEventListeners(elements, {day, _id});\n        \n        return elements.content \n    }\n    \n    function setTemplateElements(){\n        const template = document.querySelector(\"#userPageAddAvailabilityBlockTemplate\");\n        const content = document.importNode(template.content, true);\n    \n        const user = content.querySelector(\".userPageAddAvailabilityBlock\");\n        const startTimeText = content.querySelector(\".userPageAddAvailabilityBlockStart > p\")\n        const endTimeText = content.querySelector(\".userPageAddAvailabilityBlockEnd > p\")\n        \n        const editButton = content.querySelector(\".userPageAddAvailabilityBlockEditButton\");\n        const deleteButton = content.querySelector(\".userPageAddAvailabilityBlockDeleteButton\");\n        \n        return {user, content, startTimeText, endTimeText, editButton, deleteButton}\n    }\n    \n    function setElementsContent(blockElement, blockData){\n        blockElement.user.setAttribute(\"dataTimeBlockId\", blockData._id)\n        if(isNaN(Number(blockData.availability.startTime)) == false){\n            blockElement.startTimeText.innerText += timeValueConverter.runConvertTotalMinutesToTime(blockData.availability.startTime);\n        }else{\n            blockElement.startTimeText.innerText = blockData.availability.startTime;\n        }\n        if(isNaN(Number(blockData.availability.endTime)) == false){\n            blockElement.endTimeText.innerText += timeValueConverter.runConvertTotalMinutesToTime(blockData.availability.endTime);\n        }else{\n            blockElement.endTimeText.innerText =blockData.availability.endTime;\n        }\n    \n        if(blockData.admin == true){\n            blockElement.editButton.remove()\n            blockElement.deleteButton.remove()\n        }\n        \n    }\n    \n    function setEventListeners(timeBlockElement, timeBlockData){\n        timeBlockElement.editButton.addEventListener(\"click\", editAdminTimeBlock);\n        timeBlockElement.deleteButton.addEventListener(\"click\", deleteAdminTimeBlock);\n    \n        function editAdminTimeBlock(){\n            events.publish(\"editAvailabilityClicked\", timeBlockData)\n        }\n        function deleteAdminTimeBlock(){\n            const confirmation = confirm(\"Delete this time block?\");\n            if(confirmation){\n                events.publish(\"deleteAvailabilityClicked\", timeBlockData)\n            }\n            \n        }\n    }\n\n})()\n\nexport {availabilityTimeBlockDataGridComponent}","import { events } from \"../events\";\n\nconst availabilityValidator = (function(){\n  \n    events.subscribe(\"adminBlockDataValidationRequested\", validateAllAdminAvailability);\n    events.subscribe(\"availabilityValidationRequested\", validateAllUserAvailability);\n    \n    function validateAllAdminAvailability(timeBlockData){\n        const {timeBlock, origin} = timeBlockData\n        const errorArray = []\n        validateAllInputs(timeBlock, errorArray)\n        \n        if(errorArray.length == 0){\n            events.publish(\"adminAvailabilityDataValidated\", timeBlockData)\n        }else{\n            events.publish(\"adminAvailabilityDataValidationFailed\", {errors: errorArray, origin})\n        }\n    }\n    \n    function validateAllUserAvailability(timeBlockData){\n        const {timeBlock, origin} = timeBlockData\n        const errorArray = []\n        validateAllInputs(timeBlock, errorArray)\n\n        if(errorArray.length == 0){\n            events.publish(\"userAvailabilityDataValidated\",timeBlockData);\n        }else{\n            events.publish(\"userAvailabilityValidationFailed\", {errors: errorArray, origin})\n        }\n    }\n    \n    function validateAllInputs(timeBlock, array){\n        try{\n            for(let prop in timeBlock.availability){\n                if(timeBlock.availability[prop] == \"default\"){\n                    throw(`Value for ${prop} cannot be default`);\n                }\n            }\n\n            if(timeBlock.availability.startTime >= timeBlock.availability.endTime){\n                throw('Start time overlaps with end time!')\n            }\n        }catch(err){\n            array.push(err)\n        }\n    }\n})()\n\nexport {availabilityValidator}","import {events} from \"../../../src/events\"\nimport { timeValueConverter } from \"../../timeConverter\";\n\nconst allAvailabilityDataModel = (function(){\n    \n    let allAvailabilityDataStable = {};\n    let allAvailabilityDataMutable = {};\n    \n    events.subscribe(\"userDataFetched\", setDataNewPageRender);\n    events.subscribe(\"updateAllAvailabilityBlocksModel\", setDataNewDatabasePost)\n    events.subscribe(\"editAvailabilityClicked\", editAvailabilityBlock)\n    events.subscribe(\"deleteAvailabilityClicked\", deleteAvailabilityBlock);\n    events.subscribe('availabilityBlockDataDeleted', setDataBlockDataDeleted)\n\n    function setDataNewPageRender(userData){\n        allAvailabilityDataStable = structuredClone(userData.availabilityTimeBlocks);\n        allAvailabilityDataMutable = structuredClone(allAvailabilityDataStable);\n    }\n\n    function editAvailabilityBlock(timeBlockObj){\n        const {day, _id} = timeBlockObj;\n        const block = allAvailabilityDataMutable[day].filter(function(timeBlock){\n            return timeBlock._id == _id;\n        })[0]\n\n        events.publish(\"availabilityBlockEditRequested\", block); \n    }\n\n    function deleteAvailabilityBlock(timeBlockObj){\n        events.publish(\"availabilityBlockDeleteRequested\", timeBlockObj);\n    }\n\n    function setDataNewDatabasePost(blockData){\n\t\tconst thisBlockIndex = allAvailabilityDataMutable[blockData.day].findIndex(function(block){\n\t\t\treturn block._id == blockData._id\n\t\t});\n\t\tif(thisBlockIndex != -1){\n\t\t\tallAvailabilityDataMutable[blockData.day][thisBlockIndex] = blockData\n\t\t}else{\n\t\t\tallAvailabilityDataMutable[blockData.day].push(blockData);\n\t\t}\n\t\t\n        allAvailabilityDataStable= structuredClone(allAvailabilityDataMutable);\n\t\tevents.publish(\"renderUpdatedAvailabilityBlockData\", {day: blockData.day, blocks: allAvailabilityDataMutable[blockData.day]})\n    }\n\n    function setDataBlockDataDeleted(blockData){\n        const {day, _id} = blockData\n\t\tconst newBlocksList = allAvailabilityDataMutable[day].filter(function(block){\n\t\t\treturn _id != block._id\n\t\t})\n\n\t\tallAvailabilityDataMutable[day] = newBlocksList;\n\t\tallAvailabilityDataStable = structuredClone(allAvailabilityDataMutable);\n\t\tevents.publish(\"renderUpdatedAvailabilityBlockData\", {day, blocks: allAvailabilityDataMutable[day]})\n\t}\n\n})()\n\nexport {allAvailabilityDataModel}","import {events} from \"../../../src/events\"\n//design issue(?): origin is tracked across 'availability' lifecycle solely to determine whether an attempt to save a availability is a post or a patch/put, is there a better way?\nconst availabilityData = (function(){\n    \n    let availabilityModelStable;\n    let availabilityModelMutable;\n\n    const timeBlockDefault = {\n        admin:false,\n        season:null,\n        day:null,\n        availability:{startTime: \"default\", endTime: \"default\"}\n    };\n\n    events.subscribe('userDataFetched', setSeason)\n    events.subscribe(\"addAvailabilityTimeBlockClicked\", addAvailabilityBlock);\n    events.subscribe(\"modifyAvailabilitySelectorValues\", modifyAvailabilityValue);\n    events.subscribe('availabilityBlockEditRequested', setAvailabilityDataEditRequest)\n    events.subscribe('cancelAvailabilityBlockChangesClicked', setAvailabilityDataCancelRequest)\n    events.subscribe(\"updateAvailabilityClicked\", validateChanges);\n    events.subscribe(\"userAvailabilityDataValidated\", updateAvailabilityData)\n    events.subscribe(\"userAvailabilityValidationFailed\", renderBlockValidationErrors);\n    events.subscribe(\"editAvailabilityBlockDataSaved\", publishBlockUpdatesToAllBlocks);\n    events.subscribe(\"newAvailabilityBlockDataSaved\", addBlockDataToAllBlocks);\n\n    function setSeason(userData){\n        timeBlockDefault.season = userData.season\n    } \n\n    function setAvailabilityDataEditRequest(timeBlock){\n        availabilityModelStable = structuredClone(timeBlock);\n        availabilityModelMutable = structuredClone(availabilityModelStable)\n\n        events.publish(\"availabilityBlockDataLoaded\", {timeBlock: availabilityModelMutable, origin:\"edit\"})\n    }\n\n    function setAvailabilityDataCancelRequest(){\n        availabilityModelStable = {};\n\n        events.publish(\"availabilityDataChangesCancelled\") \n    }\n\n    function addAvailabilityBlock(day){\n        availabilityModelStable = structuredClone(timeBlockDefault);\n        availabilityModelStable.day = day;\n\n        availabilityModelMutable = structuredClone(availabilityModelStable);\n\n        events.publish(\"availabilityBlockAddRequested\", {timeBlock: availabilityModelMutable, origin: \"add\"});\n    }\n\n    function modifyAvailabilityValue(timeBlockObj){\n        const {modifiedSelector, value} = timeBlockObj\n        availabilityModelMutable.availability[modifiedSelector] = value\n    }\n\n    function validateChanges(origin){\n        events.publish(\"availabilityValidationRequested\", {timeBlock: availabilityModelMutable, origin})\n    }\n\n    function updateAvailabilityData(validatedBlockData){\n        if(validatedBlockData.origin == \"edit\"){\n\t\t\tevents.publish(\"availabilityBlockUpdateRequested\", validatedBlockData.timeBlock) \n\t\t}else{\n\t\t\tevents.publish(\"newAvailabilityBlockAdditionRequested\", validatedBlockData.timeBlock)\n\t\t}\n    }\n\n    function renderBlockValidationErrors(validationErrorData){\n        const {errors, origin} = validationErrorData\n        events.publish(\"renderAvailabilityBlockValidationErrors\", {timeBlock: availabilityModelMutable, errors, origin})\n    }\n\n    function publishBlockUpdatesToAllBlocks(){\n        events.publish(\"updateAllAvailabilityBlocksModel\", availabilityModelMutable)\n    }\n\n    function addBlockDataToAllBlocks(_id){\n        availabilityModelMutable._id = _id;\n        events.publish(\"updateAllAvailabilityBlocksModel\", availabilityModelMutable);\n    }\n\n})()\n\nexport {availabilityData}","import {events} from \"../../../events\"\n\nconst myTeamsOrderFormComponent = (function(){\n    \n    events.subscribe(\"teamsOrderChangeRequested\", renderAllTeamsOrderForm)\n    events.subscribe(\"teamDataChangesCancelled\", unrenderAllTeamsOrderForm);\n    events.subscribe('myTeamsOrderChangeSaved', unrenderAllTeamsOrderForm);\n    events.subscribe('teamsOrderDataUpdated', rerenderAllTeamsOrderForm)\n\n    const body = document.querySelector('body')\n    const mainPage = document.querySelector('#mainPage')\n    const formDivWrapper = document.querySelector(\"#entryFormDiv\")\n    const formDiv = document.querySelector(\"#entryForm\");\n    const overlayDiv = document.createElement('div');\n    overlayDiv.id = 'overlayDiv'\n\n    function rerenderAllTeamsOrderForm(teamsData){\n        unrenderAllTeamsOrderForm()\n        renderAllTeamsOrderForm(teamsData)\n    }\n\n    function renderAllTeamsOrderForm(teamsData){\n        \n        const elements = setElements();\n        populateContent(elements, teamsData);\n        setEventListeners(elements, teamsData);\n    \n        formDiv.appendChild(elements.content);\n        mainPage.appendChild(overlayDiv)\n        overlayDiv.appendChild(formDivWrapper)\n\n        formDivWrapper.classList.toggle(\"formHidden\");\n        elements.form.classList.toggle('toggleScrollBarOn')\n        body.style.overflowY = \"hidden\"\n\n        \n\n    } \n\n    function unrenderAllTeamsOrderForm(){\n        if(formDiv.firstChild){\n            while(formDiv.firstChild){\n                formDiv.removeChild(formDiv.firstChild)\n            }\n        }\n\n        formDivWrapper.classList.add(\"formHidden\");\n        body.style.overflowY = 'scroll'\n        overlayDiv.replaceWith(...overlayDiv.childNodes)\n    }\n   \n    function setElements(){\n        const template = document.querySelector(\"#teamOrderFormTemplate\");\n        const content = document.importNode(template.content, true);\n\n        const form = content.querySelector('#teamOrderForm')\n        const teamList = content.querySelector('#teamOrderFormTeams')\n        const saveButton = content.querySelector(\"#saveTeamOrderButton\");\n        const cancelButton = content.querySelector(\"#cancelTeamOrderChangesButton\");\n    \n        return {content, form, teamList, saveButton, cancelButton}\n    }\n\n    function populateContent(elements, teamsData){\n\n        if(teamsData.length >=1){\n            teamsData.forEach(function(team){\n                const teamTemplate = document.querySelector('#teamOrderFormTeamTemplate');\n                const teamContent = document.importNode(teamTemplate.content, true);\n\n                const name = teamContent.querySelector('.teamOrderFormTeamName');\n                const size = teamContent.querySelector('.teamOrderFormTeamSize');\n                const uprankButton = teamContent.querySelector('.moveOptionUpButton');\n                const downrankButton = teamContent.querySelector('.moveOptionDownButton');\n\n                name.innerText = `Team: ${team.name}`;\n                size.innerText = `Size: ${team.size}`;\n\n                uprankButton.addEventListener('click', moveTeamRankUp);\n                downrankButton.addEventListener('click', moveTeamRankDown);\n\n                if(teamsData.length > 1 && team.rank.myTeams== 0){\n                    uprankButton.remove()\n                }else if(teamsData.length > 1 && team.rank.myTeams == teamsData.length-1){\n                    downrankButton.remove()\n                }else if(teamsData.length ==1){\n                    uprankButton.remove();\n                    downrankButton.remove();\n                }\n\n                elements.teamList.appendChild(teamContent)\n\n                function moveTeamRankUp(){\n                    events.publish('modifyMyTeamsOrderClicked', {team: team, modifier: -1})\n                }\n                function moveTeamRankDown(){\n                    events.publish('modifyMyTeamsOrderClicked', {team: team, modifier: 1})\n                }\n            })\n        }else{\n            elements.teamList.innerText = 'No teams here!'\n            elements.saveButton.disabled = true;\n        }\n    }\n\n    function setEventListeners(elements){       \n        elements.saveButton.addEventListener(\"click\", saveTeamOrderData);\n        elements.cancelButton.addEventListener(\"click\", cancelTeamOrderChanges);\n\n        function saveTeamOrderData(){\n            events.publish(\"updateTeamOrderClicked\")      \n        }\n        function cancelTeamOrderChanges(){\n           events.publish(\"cancelTeamOrderChangesClicked\")\n        }\n    }\n})();\n\nexport{myTeamsOrderFormComponent}","import {events} from \"../../../events\"\nimport { selectorBuilder } from \"../../../../src/selectorDOMBuilder\"\nimport { timeValueConverter } from \"../../../../src/timeConverter\";\n\nconst teamDataFormComponent = (function(){\n    \n    events.subscribe(\"teamAddRequested\", renderTeamDataForm)\n    events.subscribe('teamDataLoaded', renderTeamDataForm)\n    events.subscribe(\"teamDataChangesCancelled\", unrenderTeamDataForm);\n  \n    events.subscribe(\"optionsModified\", rerenderTeamDataForm)\n\n    events.subscribe(\"renderTeamDataValidationErrors\", renderTeamDataValidationErrors)\n    events.subscribe(\"editTeamDataSaved\", unrenderTeamDataForm);\n    events.subscribe('newTeamDataSaved', unrenderTeamDataForm)\n\n    const body = document.querySelector('body')\n    const mainPage = document.querySelector('#mainPage')\n    const formDivWrapper = document.querySelector(\"#entryFormDiv\")\n    const formDiv = document.querySelector(\"#entryForm\");\n    const overlayDiv = document.createElement('div');\n    overlayDiv.id = 'overlayDiv'\n\n    function rerenderTeamDataForm(teamData){\n        unrenderTeamDataForm()\n        renderTeamDataForm(teamData)\n    }\n\n    function renderTeamDataForm(teamData){\n        \n        const elements = setElements();\n        populateContent(elements, teamData);\n        setEventListeners(elements, teamData);\n    \n        formDiv.appendChild(elements.content);\n\n        const selectors = formDiv.querySelectorAll('.selector');\n        const saveButton = formDiv.querySelector('#saveTeamRequest')\n        if(Array.from(selectors).filter(function(selector){\n            return selector[selector.selectedIndex].value == \"default\"\n        }).length > 0){\n            saveButton.disabled = true;\n        }\n\n        mainPage.appendChild(overlayDiv)\n        overlayDiv.appendChild(formDivWrapper)\n\n        formDivWrapper.classList.toggle(\"formHidden\");\n        elements.form.classList.toggle('toggleScrollBarOn')\n        body.style.overflowY = \"hidden\"\n\n    } \n\n    function unrenderTeamDataForm(){\n        if(formDiv.firstChild){\n            while(formDiv.firstChild){\n                formDiv.removeChild(formDiv.firstChild)\n            }\n        }\n\n        formDivWrapper.classList.add(\"formHidden\");\n        body.style.overflowY = 'scroll'\n        overlayDiv.replaceWith(...overlayDiv.childNodes)\n    }\n   \n    function setElements(){\n        const template = document.querySelector(\"#teamFormTemplate\");\n        const content = document.importNode(template.content, true);\n    \n        const form = content.querySelector('#teamFormContainer')\n        const teamName = content.querySelector('#formTeamName');\n        const teamSize = content.querySelector('#formTeamSize');\n        const saveButton = content.querySelector(\"#saveTeamRequest\");\n        const cancelButton = content.querySelector(\"#cancelTeamRequest\");\n        const addOptionButton = content.querySelector('#addTrainingOption');\n        const formAllOpts = content.querySelector('#formAllOpts')\n    \n        return {content, form, teamName, teamSize, saveButton, cancelButton, addOptionButton, formAllOpts}\n    }\n\n    function populateContent(elements, teamData){\n\n        elements.teamName.value = teamData.team.name\n\n        let selectedOption\n        let errorText\n\n        const teamSizeSelectorNew = selectorBuilder.runBuildSelector('teamSize');\n\n        if(teamSizeSelectorNew.querySelector(`option[value = \"${teamData.team.size}\"]`) != null){\n            selectedOption = teamSizeSelectorNew.querySelector(`option[value = \"${teamData.team.size}\"]`)\n        }else{\n            selectedOption = teamSizeSelectorNew.querySelector(\"option[value = 'default']\");\n            errorText = createErrorText(teamData.teamSize, 'teamSize'); \n        }\n        \n        selectedOption.selected = true;\n        if(selectedOption.value != \"default\"){\n            teamSizeSelectorNew.firstChild.disabled = true;\n        }\n\n        teamSizeSelectorNew.addEventListener('change', modifyTeamSizeValue)\n        teamSizeSelectorNew.addEventListener(\"click\", disableDefaultOption)\n\n        elements.teamSize.replaceWith(teamSizeSelectorNew)\n        if(errorText != undefined){\n            teamSizeSelectorNew.parentElement.appendChild(errorText)\n        }\n        \n        teamData.team.allOpts.forEach(function(option){\n            buildTeamOptionElement(elements, teamData, option)\n        })\n\n        function disableDefaultOption(){\n            const values = Array.from(this.children);\n            values[0].disabled = true;\n        }\n\n        function modifyTeamSizeValue(){\n            const value = teamSizeSelectorNew.value \n            events.publish(\"modifyTeamSizeValue\", value)\n        }\n    }\n    function buildTeamOptionElement(elements, teamData, optionData){\n        const optNum = teamData.team.allOpts.indexOf(optionData) + 1; \n        const option = buildOption(teamData, optionData, optNum);\n        elements.formAllOpts.appendChild(option);\n    } \n\n    function buildOption(teamData, optionData, optNum){     \n        \n        const template = document.querySelector(\"#optionTemplate\");\n        const content = document.importNode(template.content, true);\n\n        const arrowButtonsDiv = content.querySelector(\".arrowButtonsDiv\")\n        const label = content.querySelector(\".optLabel\");\n        const allDaysDOM = content.querySelector(\".formAllDays\"); \n        const addDayButton = content.querySelector(\".addTrainingDay\");\n\n        label.innerHTML = `Option ${optNum}`;\n\n        if(teamData.team.allOpts.length >1){\n            const deleteButton = document.createElement(\"button\");\n            const upButton = document.createElement(\"button\");\n            const upImage = document.createElement(\"i\");\n            const downButton = document.createElement(\"button\");\n            const downImage = document.createElement(\"i\")\n            \n            deleteButton.classList.add(\"deleteOpt\");\n            upButton.classList.add(\"myTeamsMoveUpButton\");\n            upImage.classList.add(\"arrow\", \"up\")\n            upButton.appendChild(upImage)\n\n            downButton.classList.add(\"myTeamsMoveDownButton\");\n            downImage.classList.add(\"arrow\", \"down\")\n            downButton.appendChild(downImage)\n\n            deleteButton.addEventListener(\"click\", deleteOpt)\n            upButton.addEventListener(\"click\", moveOptionUp);\n            downButton.addEventListener(\"click\", moveOptionDown);\n\n            deleteButton.innerText = \"X\"\n\n            arrowButtonsDiv.after(deleteButton)\n\n            if(optNum != 1 && optNum != teamData.team.allOpts.length){\n                arrowButtonsDiv.appendChild(upButton)\n                arrowButtonsDiv.appendChild(downButton)\n            }\n            if(optNum == teamData.team.allOpts.length){\n                arrowButtonsDiv.appendChild(upButton)\n            }\n            if(optNum == 1){\n                arrowButtonsDiv.appendChild(downButton)\n            }\n        }\n\n        addDayButton.addEventListener(\"click\", addDay);\n        \n        renderAllDaysDetails(teamData, optionData, optNum, allDaysDOM); \n\n        return content\n        \n        function addDay(){\n            events.publish(\"addDay\", {optNum, origin: teamData.origin})\n        }\n\n        function deleteOpt(){\n            events.publish(\"deleteOpt\", {optNum, origin: teamData.origin})\n        }\n\n        function moveOptionUp(){\n            events.publish(\"modifyOptOrder\", {optNum, modifier:-1, origin: teamData.origin}) \n        }\n\n        function moveOptionDown(){\n            events.publish(\"modifyOptOrder\", {optNum, modifier:1, origin: teamData.origin})\n        }\n    }\n\n    function renderAllDaysDetails(teamData, optionData, optNum, allDaysDOM){\n        const allDaysDOMNew = document.createElement(\"div\");  \n        allDaysDOMNew.classList.add(\"formAllDays\")\n\n        optionData.forEach(function(dayData){\n            const dayNum = optionData.indexOf(dayData) +1; \n            const day = buildDay(teamData, optionData, dayData, optNum, dayNum);\n            allDaysDOMNew.appendChild(day);\n        })\n        allDaysDOM.replaceWith(allDaysDOMNew);\n        \n    }\n\n\n    function buildDay(teamData, optionData, dayData, optNum, dayNum){     \n        const template = document.querySelector(\"#dayTemplate\");\n        const content = document.importNode(template.content, true);\n\n        const labelButtonDiv = content.querySelector(\".labelDeleteDayButton\");\n        const label = content.querySelector(\".dayLabel\");\n        const allDaysDetails = content.querySelector(\".formAllDayDetails\");\n        \n        label.innerHTML = `Day ${dayNum}`;\n        \n        if(optionData.length>1){\n            const deleteButton = document.createElement(\"button\");\n            deleteButton.classList.add(\"deleteDay\");\n            deleteButton.innerText = \"X\"\n            \n            deleteButton.addEventListener(\"click\", deleteDay);\n            labelButtonDiv.insertBefore(deleteButton, label)\n        }\n        \n        const allDaysDetailsNew = buildDayDetails(dayData, optNum, dayNum);\n\n        allDaysDetails.replaceWith(allDaysDetailsNew)\n\n        return content\n\n        function deleteDay(){\n            events.publish(\"deleteDay\", {optNum, dayNum, origin: teamData.origin})\n        } \n    }\n    \n\n    function buildDayDetails(dayData, optNum, dayNum){        \n        const template = document.querySelector(\"#dayDetailsTemplate\");\n        const content = document.importNode(template.content, true);\n\n        const selectors = content.querySelectorAll(\".selector\")\n\n        selectors.forEach(function(selection){\n            const primaryClass = Array.from(selection.classList)[0];\n    \n            const selectorNew = selectorBuilder.runBuildSelector(primaryClass);\n            let selectedOption\n            let errorText\n            \n            if(selectorNew.querySelector(`option[value = \"${dayData[primaryClass]}\"]`) != null){\n                selectedOption = selectorNew.querySelector(`option[value = \"${dayData[primaryClass]}\"]`)\n            }else{\n                selectedOption = selectorNew.querySelector(\"option[value = 'default']\");\n                errorText = createErrorText(dayData, primaryClass);\n                \n            }\n            selectedOption.selected = true;\n            if(selectedOption.value != \"default\"){\n                selectorNew.firstChild.disabled = true;\n            }\n            \n            selectorNew.addEventListener(\"change\", publishSelectionValueChange);\n\n            selection.replaceWith(selectorNew);\n            if(errorText != undefined){\n                selectorNew.parentElement.appendChild(errorText)\n            }\n\n            function publishSelectionValueChange(){\n                \n                const modifiedSelector = primaryClass;\n                let value\n                if(primaryClass == 'startTime' || primaryClass == 'endTime'){\n                    value = Number(selectorNew.value)\n                }else{\n                    value = selectorNew.value\n                }\n                \n                events.publish(\"modifyTeamSelectorValue\", {optNum, dayNum, modifiedSelector, value})\n\n                const selectors = formDiv.querySelectorAll('.selector');\n                const saveButton = formDiv.querySelector('#saveTeamRequest')\n                if(Array.from(selectors).filter(function(selector){\n                    return selector[selector.selectedIndex].value == \"default\"\n                }).length == 0){\n                    saveButton.disabled = false;\n                }\n            }\n        });\n\n        return content \n    }\n\n    function setEventListeners(elements, teamData){\n    \n        elements.saveButton.addEventListener(\"click\", saveTeamData);\n        elements.cancelButton.addEventListener(\"click\", cancelTeamChanges);\n        elements.addOptionButton.addEventListener(\"click\", addOption);\n\n        function addOption(){\n            events.publish(\"addOpt\", teamData)\n         }\n\n        function saveTeamData(){\n            if(modifyTeamNameValue() == false){\n                return\n            }else{\n                events.publish(\"updateTeamClicked\", teamData.origin)   \n            }    \n        }\n        function cancelTeamChanges(){\n           events.publish(\"cancelTeamChangesClicked\")\n        }\n\n       \n        function modifyTeamNameValue(){ \n            try{\n                if(teamData.team.name != \"\" && elements.teamName.value != teamData.team.name){\n                    const confirmation = confirm(`If you submit changes, this will change team name from ${teamData.team.name} to ${elements.teamName.value}. Proceed? `);\n                    if(confirmation){\n                        events.publish(\"modifyTeamNameValue\", elements.teamName.value)\n                    }else{\n                        elements.teamName.value = teamData.team.name;\n                        throw false \n                    }\n                }else if(teamData.team.name != elements.teamName.value){\n                    events.publish(\"modifyTeamNameValue\", elements.teamName.value)\n                }\n            }catch(err){\n                return err\n            }\n        }\n    }\n\n    function createErrorText(data, selector){\n        const errorText = document.createElement(\"p\");\n        errorText.innerText = `Your selected value of ${timeValueConverter.runConvertTotalMinutesToTime(data[selector])} for ${selector} has been invalidated by a change to the opening/closing times for the facility. Speak with your supervisor to address this or change this value.`;\n        return errorText;\n    }\n\n    function renderTeamDataValidationErrors(teamData){\n        \n        unrenderTeamDataForm();\n        renderTeamDataForm(teamData);\n        \n        const errorList = document.querySelector(\"#teamDataGeneralErrorList\");\n\n        if(errorList.firstChild){\n            while(errorList.firstChild){\n                errorList.removeChild(errorList.firstChild)\n            }\n        }\n\n        teamData.errors.forEach(function(error){\n            const bullet = document.createElement(\"li\");\n            bullet.innerText = error;\n            errorList.appendChild(bullet);\n        })\n    }\n})();\n\nexport{teamDataFormComponent}","import { events } from \"../../../events\";\nimport {timeValueConverter} from \"../../../timeConverter\";\n\nconst myTeamsDataGridComponent = (function(){\n\n    events.subscribe(\"renderUpdatedMyTeamsData\", renderMyTeams)\n\n    function renderMyTeams(teamData){\n\n        const teamGrid = document.querySelector(\"#teamGrid\");\n        const teamGridNew = document.createElement(\"div\");\n        teamGridNew.id = \"teamGrid\";\n\n        if(teamData.length > 0){\n            teamData.forEach(function(team){\n                const teamRow = buildTeamRow(team);\n                teamGridNew.appendChild(teamRow);\n            })\n        }else{\n            const p = document.createElement('p');\n            p.innerText = 'You have no teams listed!'\n            teamGridNew.appendChild(p) \n        }\n\n        teamGrid.replaceWith(teamGridNew); \n    }\n\n    function buildTeamRow(teamData){   \n        const elements = setTemplateElements();\n        setElementsContent(elements, teamData);\n        setEventListeners(elements, teamData)\n\n        return elements.content  \n    }\n\n    function setTemplateElements(){\n        const template = document.querySelector(\"#userPageTeamBlockTemplate\");\n        const content = document.importNode(template.content, true);\n\n        const div = content.querySelector(\".teamGridTeam\")\n\n        const name = content.querySelector(\".teamGridTeamName\");\n        const size = content.querySelector(\".teamGridTeamSize\");\n        const lastVerified = content.querySelector(\".teamGridTeamLastVerified\");\n        const optionContainer = content.querySelector(\".teamGridTeamOptionContainer\");\n        const verifyButton = content.querySelector('.teamGridTeamVerifyButton')\n        const editButton = content.querySelector('.teamGridTeamEditButton')\n        const deleteButton = content.querySelector('.teamGridTeamDeleteButton')\n\n        return {content, div, name, size, lastVerified, optionContainer, editButton, deleteButton, verifyButton}\n    }\n\n    function setElementsContent(teamElement, teamData){\n        teamElement.div.setAttribute(\"data-teamId\", teamData._id)\n        teamElement.name.innerText = `${teamData.name}`;\n        teamElement.size.innerText = `${teamData.size} athletes`;\n        teamElement.lastVerified.innerText = `Last Verified: ${teamData.lastVerified}`;\n        \n        teamData.allOpts.forEach(function(option){\n            const optionTemplate = document.querySelector(\"#userPageTeamOptionBlockTemplate\");\n            const optContent = document.importNode(optionTemplate.content, true);\n\n            const optNumDiv = optContent.querySelector(\".teamGridTeamOptionNumber\")\n            optNumDiv.innerText = `Option ${teamData.allOpts.indexOf(option) + 1}`\n            \n            const dayContainer = optContent.querySelector(\".teamGridTeamDayContainer\");\n            option.forEach(function(day){\n                const dayTemplate = document.querySelector('#userPageTeamDayBlockTemplate')\n                const dayContent = document.importNode(dayTemplate.content, true);\n\n                const dayOfWeek = dayContent.querySelector('.teamGridTeamDayOfWeek');\n                const startTime = dayContent.querySelector('.teamGridTeamStartTime');\n                const endTime = dayContent.querySelector('.teamGridTeamEndTime');\n                const inWeiss = dayContent.querySelector('.teamGridTeamInWeiss');\n\n                dayOfWeek.innerText = `${day.dayOfWeek}`;\n                startTime.innerText = `${timeValueConverter.runConvertTotalMinutesToTime(day.startTime)}`;\n                endTime.innerText = `${timeValueConverter.runConvertTotalMinutesToTime(day.endTime)}`;\n                inWeiss.innerText = `${day.inWeiss}`;\n\n                dayContainer.appendChild(dayContent)\n            })\n            teamElement.optionContainer.appendChild(optContent)\n        })\n    }\n\n    function setEventListeners(teamElement, teamData){\n        teamElement.editButton.addEventListener(\"click\", editTeam);\n        teamElement.deleteButton.addEventListener(\"click\", deleteTeam);\n        teamElement.verifyButton.addEventListener(\"click\", verifyTeam)\n\n        function editTeam(){\n            events.publish('editTeamClicked', teamData._id)\n        }\n\n        function deleteTeam(){\n            const confirmation = confirm('Delete this team?');\n            if(confirmation){\n                events.publish('deleteTeamClicked', teamData._id)\n            }\n        }\n\n        function verifyTeam(){\n            events.publish('verifyTeamClicked', teamData._id)\n        }\n    }\n})()\n\nexport {myTeamsDataGridComponent}","import {events} from \"../../src/events\"\nimport { timeValueConverter } from \"../timeConverter\";\n\nconst teamValidator = (function(){\n\n    let facilityData\n\n    events.subscribe('userDataFetched', setFacilityData)\n    events.subscribe(\"teamValidationRequested\", validateAllInputs);\n\n    function setFacilityData(userData){\n        facilityData = userData.facilityData\n    }\n\n    function validateAllInputs(teamDataObj){\n        const errorArray = [];\n\n        validateName(teamDataObj.teamData, errorArray);\n        validateSize(teamDataObj.teamData, errorArray);\n        validateSchedulePreferences(teamDataObj.teamData, errorArray);\n\n        if(errorArray.length == 0){\n            events.publish(\"teamDataValidated\", teamDataObj)\n        }else{\n            events.publish(\"teamDataValidationFailed\", {errors: errorArray, origin: teamDataObj.origin})\n        }\n    }\n\n    function validateName(teamData, array){\n        const name = teamData.name;\n        const nameRegex = /[^A-Za-z0-9]/;\n        try{\n            if(nameRegex.test(name)){\n                throw(\"Team names can only include letters and numbers (no spaces or symbols).\");\n            }else if(name == \"\"){\n                throw(\"Team name must have a value.\");\n            }\n        }catch(err){\n            array.push(err)\n        }\n    }\n\n    function validateSize(teamData,array){\n        const size = teamData.size;\n        try{\n            if(size == \"default\"){\n                throw(\"Team size must have a value.\")\n            }else if(size > facilityData.facilityMaxCapacity){\n                throw(\"Team size is greater than max size value. Discuss max size value changes with administrator.\")\n            }\n        }catch(err){\n            array.push(err)\n        }\n    }\n\n    function validateSchedulePreferences(teamData,array){\n        teamData.allOpts.forEach(function(option){\n            const optNum = teamData.allOpts.indexOf(option) + 1;\n            const validatedDayArray = [];\n\n            option.forEach(function(day){\n                const dayNum = option.indexOf(day)+1;\n                catchInvalidInputs();\n                catchConflictingDays();\n\n                function catchInvalidInputs(){\n                    for(const prop in day){\n                        try{\n                            if(day[prop] == \"default\"){\n                                throw(`Option ${optNum}: Day ${dayNum}: ${prop} must have a value.`);\n                            }else if((prop == \"startTime\" || prop == \"endTime\") && (day[prop] < facilityData.facilityOpen || day[prop] > facilityData.facilityClose)){\n                                throw(`Option ${optNum}: Day ${dayNum}: ${prop} is outside operating hours. Discuss operating hour changes with administrator.`);\n                            }\n                        }catch(err){\n                            array.push(err)\n                        }  \n                    }\n\n                    try{\n                        if(day.startTime >= day.endTime){\n                            throw(`Option ${optNum} Day ${dayNum}'s startTime ${timeValueConverter.runConvertTotalMinutesToTime(day.startTime)} is equal to or later than endTime ${timeValueConverter.runConvertTotalMinutesToTime(day.endTime)}`)\n                        }\n                    }catch(err){\n                        array.push(err)\n                    }\n                }\n\n                function catchConflictingDays(){\n                    try{\n                        validatedDayArray.forEach(function(validatedDay){\n                            const validatedNum = validatedDayArray.indexOf(validatedDay) + 1 ;\n                            if(validatedDay.dayOfWeek == day.dayOfWeek && validatedDay.startTime == day.startTime && validatedDay.inWeiss == day.inWeiss){\n                                throw(`Option ${optNum}: Day ${validatedNum} and Day ${dayNum} are duplicates.`);\n                            }else if(validatedDay.dayOfWeek == day.dayOfWeek && day.startTime < validatedDay.startTime && day.endTime > validatedDay.endTime){\n                                throw(`Option ${optNum}: Day ${dayNum}'s session runs through Day ${validatedNum}'s session.`);\n                            }else if(validatedDay.dayOfWeek == day.dayOfWeek && day.startTime > validatedDay.startTime && day.startTime < validatedDay.endTime){\n                                throw(`Option ${optNum}: Day ${dayNum}'s start time is in the middle of  Day ${validatedNum}'s session.`);\n                            }else if(validatedDay.dayOfWeek == day.dayOfWeek && day.endTime < validatedDay.endTime && day.endTime > validatedDay.startTime){\n                                throw(`Option ${optNum}: Day ${dayNum}'s end time is in the middle of  Day ${validatedNum}'s session.`);\n                            }   \n                        })\n                        validatedDayArray.push(day)\n                    }catch(err){\n                        array.push(err)\n                    }\n                }\n            })\n        })\n    }\n\n})();\n\nexport{teamValidator}","import {events} from \"../../events\"\n\nconst myTeamsModel = (function(){\n   \n    let myTeamsDataStable = [];\n    let myTeamsDataMutable = [];\n\n    events.subscribe('userDataFetched', setDataNewPageRender)\n    events.subscribe('updateMyTeamsModel', setDataNewDatabasePost);\n    events.subscribe(\"editTeamClicked\", editTeam)\n    events.subscribe(\"deleteTeamClicked\", deleteTeam)\n    events.subscribe('teamDataDeleted', setDataTeamDataDeleted)\n   \n    events.subscribe(\"verifyTeamClicked\", verifyTeam)\n    events.subscribe(\"teamVerificationSaved\", setDataTeamDataVerified)\n    events.subscribe('verifyAllTeamsClicked', verifyAllTeams);\n    events.subscribe('updateAllTeamsModel', setDataNewDatabasePost)\n    \n    events.subscribe('teamOrderChangeClicked', sendTeamData)\n    events.subscribe(\"modifyMyTeamsOrderClicked\", modifyTeamOrder);\n    events.subscribe('updateTeamOrderClicked', saveTeamOrderChanges);\n    events.subscribe('cancelTeamOrderChangesClicked', cancelTeamOrderChanges);\n    events.subscribe('myTeamsOrderChangeSaved', setDataNewTeamOrder)\n\n\n    function setDataNewPageRender(userData){\n        myTeamsDataStable = structuredClone(userData.myTeams);\n        myTeamsDataMutable = structuredClone(myTeamsDataStable);\n    }\n\n    function editTeam(teamId){ \n        const thisTeam = myTeamsDataMutable.filter(function(team){\n            return teamId == team._id\n        })[0];\n        events.publish(\"teamDataEditRequested\", thisTeam);\n    }\n\n    function deleteTeam(teamId){\n        events.publish(\"teamDataDeleteRequested\", teamId) \n    }\n\n    function verifyTeam(teamId){\n        const thisTeam = structuredClone(myTeamsDataMutable.filter(function(team){\n            return teamId == team._id\n        })[0]);\n        \n        const now = new Date();\n        const nowParsed = `${now.getMonth()+1}-${now.getDate()}-${now.getFullYear()}`\n        thisTeam.lastVerified = nowParsed;\n\n        events.publish(\"teamVerificationUpdateRequested\", thisTeam) \n    }\n\n    function verifyAllTeams(){\n        const now = new Date();\n        const nowParsed = `${now.getMonth()+1}-${now.getDate()}-${now.getFullYear()}`\n\n        events.publish(\"userAllTeamsVerificationUpdateRequested\", nowParsed)\n    }\n    \n\n    function setDataNewDatabasePost(teamData){\n\t\tconst thisTeamIndex = myTeamsDataMutable.findIndex(function(team){\n\t\t\treturn team._id == teamData._id\n\t\t});\n\t\tif(thisTeamIndex != -1){\n\t\t\tmyTeamsDataMutable[thisTeamIndex] = teamData\n\t\t}else{\n\t\t\tmyTeamsDataMutable.push(teamData);\n\t\t}\n\t\t\n        myTeamsDataStable = structuredClone(myTeamsDataMutable);\n\t\tevents.publish(\"renderUpdatedMyTeamsData\", myTeamsDataMutable)\n    }\n\n    function setDataTeamDataDeleted(_id){\n\t\tconst newTeamsList = myTeamsDataMutable.filter(function(team){\n\t\t\treturn _id != team._id\n\t\t})\n\n\t\tmyTeamsDataMutable = newTeamsList;\n\t\tmyTeamsDataStable = structuredClone(myTeamsDataMutable);\n\t\tevents.publish(\"renderUpdatedMyTeamsData\", myTeamsDataMutable)\n\t}\n\n    function setDataTeamDataVerified(teamData){\n        let thisTeam = myTeamsDataMutable.filter(function(team){\n            return teamData._id == team._id\n        })[0];\n\n        for(let prop in teamData){\n            thisTeam[prop] = teamData[prop]\n        }\n\n        events.publish(\"renderUpdatedMyTeamsData\", myTeamsDataMutable)\n    }\n\n    function modifyTeamOrder(teamObj){\n        const thisTeamIndex = myTeamsDataMutable.findIndex(function(team){\n            return team._id == teamObj.team._id\n        })\n        \n        const thisTeam = myTeamsDataMutable.splice(thisTeamIndex, 1)[0]\n\n        myTeamsDataMutable.splice(thisTeamIndex + teamObj.modifier, 0, thisTeam);\n        myTeamsDataMutable.forEach(function(thisTeam){\n            thisTeam.rank.myTeams = myTeamsDataMutable.findIndex(function(teams){\n                return teams._id == thisTeam._id\n            })\n        })     \n        events.publish(\"teamsOrderDataUpdated\", myTeamsDataMutable);\n    }\n\n    function sendTeamData(){\n        events.publish('teamsOrderChangeRequested', myTeamsDataMutable)\n    }\n\n    function saveTeamOrderChanges(){\n        events.publish('myTeamsOrderDataUpdateRequested', myTeamsDataMutable)\n    }\n\n    function cancelTeamOrderChanges(){\n        myTeamsDataMutable = structuredClone(myTeamsDataStable);\n        events.publish(\"teamDataChangesCancelled\")\n    }\n\n    function setDataNewTeamOrder(){\n        myTeamsDataStable = structuredClone(myTeamsDataMutable)\n        events.publish('renderUpdatedMyTeamsData', myTeamsDataMutable)\n    }\n\n    \n\n    \n\n\n})();\n\nexport{myTeamsModel}\n\n\n\n","import {events} from \"../../../src/events\"\n\n//design issue(?): origin is tracked across 'team' lifecycle solely to determine whether an attempt to save a team is a post or a patch/put, is there a better way?\n\nconst singleTeamData = (function(){\n    \n    let teamModelStable = {};\n    let teamModelMutable = {}\n    \n    const teamDetailsDefault = {\n        name: \"\",\n        season: \"default\",\n        size: \"default\", \n        rank: {\n            myTeams: null,\n            allTeams: null\n        },\n        allOpts: null,\n        coach:null,\n        lastVerified: null,\n        enabled: true\n    }\n    \n    events.subscribe('userDataFetched', setDefaults)\n    events.subscribe(\"addTeamClicked\", addTeam);\n    events.subscribe(\"teamDataEditRequested\", setTeamDataEditRequest); \n    events.subscribe('cancelTeamChangesClicked', setTeamDataCancelRequest)\n    events.subscribe(\"updateTeamClicked\", validateChanges);\n    events.subscribe('teamDataValidated', updateTeamData);\n    events.subscribe('teamDataValidationFailed', renderTeamValidationErrors)\n    events.subscribe(\"editTeamDataSaved\", publishTeamUpdatesToAllTeams);\n    events.subscribe(\"newTeamDataSaved\", addTeamDataToAllTeams);\n\n    events.subscribe(\"addOpt\", addOption);\n    events.subscribe(\"deleteOpt\", deleteOption);\n    events.subscribe(\"modifyOptOrder\", modifyOptionsOrder);\n   \n    events.subscribe(\"addDay\", addDay);\n    events.subscribe(\"modifyTeamSelectorValue\", modifySelectorValue);\n    events.subscribe(\"deleteDay\", deleteDay);\n    events.subscribe(\"modifyTeamSizeValue\", modifyTeamSizeValue);\n    events.subscribe(\"modifyTeamNameValue\", modifyTeamNameValue);\n\n    \n    function setDefaults(userData){\n        teamDetailsDefault.coach = userData.thisUser._id\n        teamDetailsDefault.season = userData.season\n    }\n    \n    function addTeam(){\n        teamModelStable = structuredClone(teamDetailsDefault);\n        teamModelStable.allOpts = [[createDefaultDayDetails()]]\n        teamModelMutable = structuredClone(teamModelStable)\n        events.publish(\"teamAddRequested\", {team:teamModelMutable, origin: 'add'})\n    }\n\n    function setTeamDataEditRequest(team){\n        teamModelStable = structuredClone(team)\n        teamModelMutable = structuredClone(teamModelStable)\n    \n        events.publish(\"teamDataLoaded\", {team:teamModelMutable, origin: 'edit'})\n    }\n\n    function setTeamDataCancelRequest(){\n        teamModelStable = {};\n        events.publish(\"teamDataChangesCancelled\") \n    }\n\n    function createDefaultDayDetails(){\n        const defaultDayDetails = {\n            dayOfWeek: \"default\",\n            startTime: \"default\",\n            endTime: \"default\",\n            inWeiss: \"default\"\n        };\n        return defaultDayDetails\n    }\n\n    function addOption(teamData){\n        teamModelMutable.allOpts.push([createDefaultDayDetails()]);\n        events.publish(\"optionsModified\", {team:teamModelMutable, origin: teamData.origin});\n    }\n\n    function deleteOption(teamData){\n        const index = teamData.optNum - 1;\n        teamModelMutable.allOpts.splice(index, 1);\n        events.publish(\"optionsModified\", {team:teamModelMutable, origin: teamData.origin});\n    }\n\n    function modifyOptionsOrder(teamData){\n        const index = teamData.optNum - 1;\n        const option = teamModelMutable.allOpts.splice(index, 1)[0];\n        teamModelMutable.allOpts.splice(index + teamData.modifier, 0, option);\n        events.publish(\"optionsModified\", {team:teamModelMutable, origin: teamData.origin});\n    }\n\n    function addDay(teamData){\n        const optIndex = teamData.optNum - 1;\n        const optionDetails = teamModelMutable.allOpts[optIndex];\n        optionDetails.push(createDefaultDayDetails());\n        events.publish(\"optionsModified\", {team:teamModelMutable, origin: teamData.origin})\n    }\n\n    function deleteDay(teamData){\n        const optIndex = teamData.optNum - 1;\n        const dayIndex = teamData.dayNum - 1;\n        const optionDetails = teamModelMutable.allOpts[optIndex];\n        optionDetails.splice(dayIndex, 1);\n        events.publish(\"optionsModified\", {team:teamModelMutable, origin: teamData.origin})\n    }\n\n    function modifySelectorValue(teamData){\n        const optIndex = teamData.optNum - 1;\n        const dayIndex = teamData.dayNum - 1;\n        teamModelMutable.allOpts[optIndex][dayIndex][teamData.modifiedSelector] = teamData.value\n    }\n\n    function modifyTeamSizeValue(size){\n        teamModelMutable.size = size;\n    }\n\n    function modifyTeamNameValue(name){\n        teamModelMutable.name = name\n    }   \n\n    function validateChanges(origin){\n        events.publish(\"teamValidationRequested\", {teamData: teamModelMutable, origin})\n    }\n\n    function updateTeamData(validatedData){\n        if(validatedData.origin == \"edit\"){\n\t\t\tevents.publish(\"teamUpdateRequested\", validatedData.teamData) \n\t\t}else{\n\t\t\tevents.publish(\"newTeamAdditionRequested\", validatedData.teamData)\n\t\t}\n    }\n\n    function renderTeamValidationErrors(validationErrorData){\n        const {errors, origin} = validationErrorData\n        events.publish(\"renderTeamDataValidationErrors\", {team: teamModelMutable, errors, origin})\n    }\n\n    function publishTeamUpdatesToAllTeams(){\n        events.publish(\"updateAllTeamsModel\", teamModelMutable)\n    }\n\n    function addTeamDataToAllTeams(data){\n        const {_id, rank} = data\n        teamModelMutable._id = _id;\n        teamModelMutable.rank = rank;\n        events.publish(\"updateAllTeamsModel\", teamModelMutable);\n    }\n\n})();\n\nexport{singleTeamData}\n","import {events} from \"../src/events\"\n\nconst databasePost = (function(){\n\n    events.subscribe(\"userUpdateRequested\", updateUserData);\n    events.subscribe(\"newUserAdditionRequested\", addUserData);\n    events.subscribe(\"deleteUserRequested\", deleteUserData);\n    events.subscribe('adminBlockUpdateRequested', updateAdminBlockData);\n    events.subscribe('newAdminBlockAdditionRequested', addAdminBlockData)\n    events.subscribe('adminBlockDeleteRequested', deleteAdminBlockData);\n    events.subscribe('availabilityBlockUpdateRequested', updateUserBlockData);\n    events.subscribe('newAvailabilityBlockAdditionRequested', addUserBlockData)\n    events.subscribe('availabilityBlockDeleteRequested', deleteUserBlockData);\n    events.subscribe('teamUpdateRequested', updateTeamData);\n    events.subscribe('newTeamAdditionRequested', addTeamData)\n    events.subscribe('teamDataDeleteRequested', deleteTeamData)\n    events.subscribe('teamVerificationUpdateRequested', updateTeamVerificationData);\n    events.subscribe('userAllTeamsVerificationUpdateRequested', updateUserVerificationData);\n    events.subscribe(\"adminFacilityDataUpdateRequested\", updateFacilityData);\n    events.subscribe('teamEnabledUpdateRequested', updateTeamEnabledStatus)\n\n    events.subscribe('myTeamsOrderDataUpdateRequested', updateMyTeamsOrder)\n    events.subscribe('allTeamsOrderDataUpdateRequested', updateAllTeamsOrder);\n\n    events.subscribe('scheduleBuildRequested', buildSchedule)\n    \n\n    async function updateFacilityData(databaseBoundObject){ \n        try{\n            await fetch('adminHome/facilitySettings', {\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n            events.publish(\"facilityDataSaved\")\n        }catch(err){\n            console.log(err)\n        }\n       \n    }\n\n    async function updateUserData(databaseBoundObject){\n        const {_id} = databaseBoundObject;\n        try{\n            const userDataResponse = await fetch(`adminHome/user/${_id}`, {\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(userDataResponse.status == 404){\n                throw('404 error!')\n            }else if(userDataResponse.status == 400){\n                const errors = await userDataResponse.json();\n                const origin = \"edit\"\n                events.publish(\"userDataValidationFailed\", {errors, origin})\n            }else if(userDataResponse.status == 200){ \n                events.publish(\"editUserDataSaved\")\n            }\n           \n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function addUserData(databaseBoundObject){\n        try{\n            const userDataResponse = await fetch('adminHome/user', {\n                method:'POST',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(userDataResponse.status == 404){\n                throw('404 error!')\n            }else if(userDataResponse.status == 400){\n                const errors = await userDataResponse.json()\n                const origin = \"add\"\n                events.publish(\"userDataValidationFailed\", {errors, origin})\n            }else if(userDataResponse.status == 200){\n                const newUser = await userDataResponse.json();  \n                events.publish(\"newUserDataSaved\", newUser)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function deleteUserData(userId){\n        const idObj = {_id: userId}\n        try{\n            const userDataResponse = await fetch(`adminHome/user/${userId}`, {\n                method:'DELETE',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(idObj)\n    \n            });\n\n            if(userDataResponse.status == 404){\n                throw('404 error!')\n            }else if(userDataResponse.status == 400){\n                const errors = await userDataResponse.json();\n                alert(errors);\n            }else if(userDataResponse.status == 303){\n                const {userId, season} = await userDataResponse.json();\n                const pseudoAnchor = document.createElement('a');\n                pseudoAnchor.href = `/user/${userId}/${season}/adminHome`;\n                pseudoAnchor.click();\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateAdminBlockData(databaseBoundObject){\n        const {_id} = databaseBoundObject;\n        try{\n            const blockDataResponse = await fetch(`adminHome/timeBlock/${_id}`, {\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n                const errors = await blockDataResponse.json();\n                const origin = \"edit\"\n                events.publish(\"adminAvailabilityDataValidationFailed\", {errors, origin})\n            }else if(blockDataResponse.status == 200){ \n                events.publish(\"editAdminBlockDataSaved\")\n            }\n           \n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function addAdminBlockData(databaseBoundObject){\n        try{\n            const blockDataResponse = await fetch('adminHome/timeBlock', {\n                method:'POST',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n                const errors = await blockDataResponse.json()\n                const origin = \"add\"\n                events.publish(\"adminAvailabilityDataValidationFailed\", {errors, origin})\n            }else if(blockDataResponse.status == 200){\n                const newAdminBlock = await blockDataResponse.json(); \n                events.publish(\"newAdminBlockDataSaved\", newAdminBlock)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function deleteAdminBlockData(blockData){\n        const idObj = {_id: blockData._id}\n        try{\n            const blockDataResponse = await fetch(`adminHome/timeBlock/${blockData._id}`, {\n                method:'DELETE',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(idObj)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n                const errors = await blockDataResponse.json();\n                alert(errors);\n            }else if(blockDataResponse.status == 200){\n                events.publish(\"adminBlockDataDeleted\", blockData)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateUserBlockData(databaseBoundObject){\n        const {_id} = databaseBoundObject;\n        try{\n            const blockDataResponse = await fetch(`home/timeBlock/${_id}`, {\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n               \n                const errors = await blockDataResponse.json();\n                const origin = \"edit\"\n                events.publish(\"userAvailabilityValidationFailed\", {errors, origin})\n            }else if(blockDataResponse.status == 200){ \n                events.publish(\"editAvailabilityBlockDataSaved\") \n            }\n           \n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function addUserBlockData(databaseBoundObject){\n        try{\n            const blockDataResponse = await fetch('home/timeBlock', { \n                method:'POST',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n                const errors = await blockDataResponse.json()\n                const origin = \"add\"\n                events.publish(\"userAvailabilityValidationFailed\", {errors, origin})\n            }else if(blockDataResponse.status == 200){\n                const newAdminBlock = await blockDataResponse.json(); \n                events.publish(\"newAvailabilityBlockDataSaved\", newAdminBlock)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function deleteUserBlockData(blockData){\n        try{\n            const blockDataResponse = await fetch(`home/timeBlock/${blockData._id}`, {\n                method:'DELETE',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(blockData)\n    \n            });\n\n            if(blockDataResponse.status == 404){\n                throw('404 error!')\n            }else if(blockDataResponse.status == 400){\n                const errors = await blockDataResponse.json();\n                alert(errors);\n            }else if(blockDataResponse.status == 200){\n                events.publish(\"availabilityBlockDataDeleted\", blockData)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateTeamData(databaseBoundObject){\n        const {_id} = databaseBoundObject;\n        try{\n            const teamDataResponse = await fetch(`home/team/${_id}`, {\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                const errors = await teamDataResponse.json();\n                const origin = \"edit\"\n                events.publish(\"teamDataValidationFailed\", {errors, origin})\n            }else if(teamDataResponse.status == 200){ \n                events.publish(\"editTeamDataSaved\")\n            }\n           \n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function addTeamData(databaseBoundObject){\n        try{\n            const teamDataResponse = await fetch('home/team', {\n                method:'POST',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                const errors = await teamDataResponse.json()\n                const origin = \"add\"\n                events.publish(\"teamDataValidationFailed\", {errors, origin})\n            }else if(teamDataResponse.status == 200){\n                const newTeam = await teamDataResponse.json();  \n                events.publish(\"newTeamDataSaved\", newTeam)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function deleteTeamData(teamId){\n        const idObj = {_id: teamId}\n        try{\n            const teamDataResponse = await fetch(`home/team/${teamId}`, {\n                method:'DELETE',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(idObj)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                const errors = await teamDataResponse.json();\n                alert(errors);\n            }else if(teamDataResponse.status == 303){\n                const {userId, season} = await teamDataResponse.json();\n                const pseudoAnchor = document.createElement('a');\n                pseudoAnchor.href = `/user/${userId}/${season}/home`;\n                pseudoAnchor.click();\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateTeamVerificationData(databaseBoundObject){\n        const {_id} = databaseBoundObject;\n        try{\n            const teamDataResponse = await fetch(`home/team/${_id}/verification`, {\n                method:'PATCH',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                throw('400 error!')\n            }else if(teamDataResponse.status == 200){  \n                events.publish(\"teamVerificationSaved\", databaseBoundObject)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateUserVerificationData(timeData){\n        const timeDataObj = {lastVerified: timeData}\n        try{\n            const teamDataResponse = await fetch(`home/allTeamsVerification`, {\n                method:'PATCH',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(timeDataObj)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                throw('400 error!')\n            }else if(teamDataResponse.status == 200){  \n                events.publish(\"allTeamsVerificationSaved\", timeData)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateMyTeamsOrder(databaseBoundObject){\n        try{\n            const teamDataResponse = await fetch(`home/allTeamsOrder`, {\n                method:'PATCH',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                throw('400 error!')\n            }else if(teamDataResponse.status == 200){  \n                events.publish(\"myTeamsOrderChangeSaved\")\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateAllTeamsOrder(databaseBoundObject){\n        try{\n            const teamDataResponse = await fetch(`adminHome/allTeamsOrder`, {\n                method:'PATCH',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(databaseBoundObject)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                throw('400 error!')\n            }else if(teamDataResponse.status == 200){  \n                events.publish(\"allTeamsOrderChangeSaved\")\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateTeamEnabledStatus(_id){\n        const idObj = {_id}\n        try{\n            const teamDataResponse = await fetch(`adminHome/team/${_id}/enabledStatus`, {\n                method:'PATCH',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n                body: JSON.stringify(idObj)\n    \n            });\n\n            if(teamDataResponse.status == 404){\n                throw('404 error!')\n            }else if(teamDataResponse.status == 400){\n                throw('400 error!')\n            }else if(teamDataResponse.status == 200){  \n                events.publish(\"teamEnableStatusChangeSaved\")\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function buildSchedule(){\n        try{\n            const scheduleResponse = await fetch(`adminHome/schedule`, {\n                method:'GET',\n                headers:{\n                    'Content-Type': 'application/json'\n          \n                },\n            });\n\n            if(scheduleResponse.status == 404){\n                throw('404 error!')\n            }else if(scheduleResponse.status == 400){\n                throw('400 error!')\n            }else if(scheduleResponse.status == 200){  \n                const data = await scheduleResponse.blob();\n                const anchor = document.createElement('a');\n                anchor.href = window.URL.createObjectURL(data);\n                anchor.download = 'schedule.xlsx';\n                anchor.click();\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n})();\n\nexport {databasePost}"],"names":["events","subscribe","eventName","fn","this","push","unsubscribe","i","length","splice","publish","data","forEach","timeValueConverter","Array","from","document","querySelector","children","day","dayString","innerText","addEventListener","dayAllBlocks","querySelectorAll","timeBlock","_id","dataset","timeblockid","editBlockButton","deleteBlockButton","confirm","addTeamButton","verifyAllTeamsButton","modifyAllTeamsOrderButton","allTeams","team","teamid","editTeamButton","deleteTeamButton","verifyTeamButton","setTeamsEventListeners","timeData","runConvertTimeToTotalMinutes","time","colonIndex","indexOf","meridian","meridianIndex","hour","Number","slice","convertTimeToTotalMinutes","runConvertTotalMinutesToTime","totalMins","standardTime","Math","floor","mins","convertTotalMinutesToTime","selectorBuilder","selectionRanges","startTime","start","end","increment","endTime","teamSize","facilityOpen","facilityClose","facilityMaxCapacity","dayOfWeek","inWeiss","setSelectorRanges","dBdata","facilityData","Object","prototype","hasOwnProperty","call","buildRangeSelectorOptions","primaryClass","selector","optionValues","option","createElement","value","appendChild","modifyEndTimeDefaultValue","startTimeSelectedValue","parentElement","nextElementSibling","lastElementChild","endTimeValue","disabled","disableDefaultOption","runBuildSelector","selection","classList","add","defaultOption","optionValue","buildArraySelectorOptions","buildSelector","checkWidth","e","matches","body","newText","child","remove","renderTimeBlockDataForm","unrenderTimeBlockDataForm","blockData","errorList","firstChild","removeChild","errors","error","bullet","mainPage","formDivWrapper","formDiv","overlayDiv","timeBlockDayData","elements","template","content","importNode","dayLabel","timeBlockSelectors","startDiv","endDiv","saveButton","cancelButton","setElements","selectorElements","timeBlockData","selectorNew","selectedOption","availability","errorText","createErrorText","selected","modifiedSelector","selectors","filter","selectedIndex","replaceWith","origin","setEventListeners","toggle","style","overflowY","childNodes","id","availabilityTimeBlockDayData","blocks","availabilityBlocksDiv","dayAllBlocksDiv","find","div","firstElementChild","dayAllBlocksDivNew","row","user","startTimeText","endTimeText","editButton","deleteButton","setTemplateElements","blockElement","setAttribute","isNaN","admin","setElementsContent","timeBlockElement","buildBlockRow","defaultText","validateAllInputs","array","prop","err","errorArray","allAvailabilityDataStable","allAvailabilityDataMutable","userData","structuredClone","availabilityTimeBlocks","thisBlockIndex","findIndex","block","timeBlockObj","newBlocksList","availabilityModelStable","availabilityModelMutable","timeBlockDefault","season","validatedBlockData","validationErrorData","renderAllTeamsOrderForm","unrenderAllTeamsOrderForm","teamsData","form","teamList","teamTemplate","teamContent","name","size","uprankButton","downrankButton","modifier","rank","myTeams","populateContent","renderTeamDataForm","unrenderTeamDataForm","teamData","teamName","addOptionButton","formAllOpts","teamSizeSelectorNew","undefined","allOpts","optionData","optNum","arrowButtonsDiv","label","allDaysDOM","addDayButton","innerHTML","upButton","upImage","downButton","downImage","after","allDaysDOMNew","dayData","dayNum","labelButtonDiv","allDaysDetails","insertBefore","allDaysDetailsNew","buildDayDetails","buildDay","renderAllDaysDetails","buildOption","buildTeamOptionElement","modifyTeamNameValue","teamGrid","teamGridNew","teamRow","lastVerified","optionContainer","verifyButton","teamElement","optionTemplate","optContent","dayContainer","dayTemplate","dayContent","buildTeamRow","p","teamDataObj","nameRegex","test","validateName","validateSize","validatedDayArray","catchInvalidInputs","validatedDay","validatedNum","catchConflictingDays","myTeamsDataStable","myTeamsDataMutable","setDataNewDatabasePost","thisTeamIndex","teamId","thisTeam","newTeamsList","now","Date","nowParsed","getMonth","getDate","getFullYear","teamObj","teams","teamModelStable","teamModelMutable","teamDetailsDefault","coach","enabled","thisUser","validatedData","index","optIndex","dayIndex","async","databaseBoundObject","userDataResponse","fetch","method","headers","JSON","stringify","status","json","console","log","newUser","userId","idObj","alert","pseudoAnchor","href","click","blockDataResponse","newAdminBlock","teamDataResponse","newTeam","timeDataObj","scheduleResponse","blob","anchor","window","URL","createObjectURL","download","onload","mediaQuery","matchMedia","userPageJSON","userPageData"],"sourceRoot":""}